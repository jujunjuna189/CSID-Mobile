import 'package:csid_mobile/pages/learning/widget/shimmer.dart';
import 'package:csid_mobile/pages/main/state/state_main.dart';
import 'package:csid_mobile/widgets/atoms/header/header_sticky.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:csid_mobile/pages/main/bloc/bloc_main.dart';
import 'package:csid_mobile/utils/asset/asset.dart';
import 'package:csid_mobile/utils/theme/theme.dart';
import 'package:csid_mobile/widgets/atoms/button/button.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:youtube_player_flutter/youtube_player_flutter.dart';

class PageLearning extends StatefulWidget {
  const PageLearning({super.key});

  @override
  State<PageLearning> createState() => _PageLearningState();
}

class _PageLearningState extends State<PageLearning> with AutomaticKeepAliveClientMixin {
  late BlocMain blocMain;

  @override
  bool get wantKeepAlive => true;

  @override
  void initState() {
    blocMain = context.read<BlocMain>();
    super.initState();
  }

  @override
  void dispose() {
    if (blocMain.videoController?.value.isPlaying == true) blocMain.videoController?.pause();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    super.build(context);
    return YoutubePlayerBuilder(
      player: YoutubePlayer(
        controller: blocMain.videoController!,
        showVideoProgressIndicator: true,
        progressIndicatorColor: ThemeApp.color.light,
        progressColors: ProgressBarColors(
          playedColor: ThemeApp.color.primary,
          handleColor: ThemeApp.color.primary,
        ),
        thumbnail: BlocBuilder<BlocMain, StateMain>(
          bloc: blocMain,
          builder: (context, state) {
            final currentState = state as MainLoaded;
            return Image.network(
              currentState.myCourse?.thumbnail ?? '',
              width: MediaQuery.of(context).size.width,
              fit: BoxFit.cover,
              errorBuilder: (context, error, stackTrace) {
                return const Icon(Icons.image, size: 50, color: Colors.grey);
              },
            );
          },
        ),
        onReady: () {
          blocMain.loadVideo(blocMain.videoSources ?? "");
        },
      ),
      builder: (context, player) {
        return NotificationListener<ScrollNotification>(
          onNotification: (scrollNotification) {
            if (scrollNotification is ScrollStartNotification) {
              if (blocMain.videoController?.value.isPlaying == true) blocMain.videoController?.pause();
            } else if (scrollNotification is ScrollEndNotification) {
              // if (blocMain.videoController?.value.isPlaying == false) blocMain.videoController?.play();
            }
            return false;
          },
          child: CustomScrollView(
            slivers: [
              SliverPadding(
                padding: const EdgeInsets.only(left: 10, right: 10, top: 10),
                sliver: SliverAppBar(
                  backgroundColor: Colors.transparent,
                  expandedHeight: 90,
                  automaticallyImplyLeading: false,
                  surfaceTintColor: Colors.transparent,
                  flexibleSpace: FlexibleSpaceBar(
                    collapseMode: CollapseMode.pin,
                    background: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        GestureDetector(
                          behavior: HitTestBehavior.translucent,
                          onTap: () => blocMain.pageController.jumpToPage(0),
                          child: Transform.translate(
                            offset: const Offset(-10, 0),
                            child: Padding(
                              padding: const EdgeInsets.all(10),
                              child: Container(
                                padding: const EdgeInsets.symmetric(horizontal: 5, vertical: 5),
                                decoration: BoxDecoration(
                                  color: ThemeApp.color.white.withOpacity(0.2),
                                  borderRadius: BorderRadius.circular(100),
                                ),
                                child: Icon(
                                  Icons.chevron_left,
                                  color: ThemeApp.color.white,
                                  size: 20,
                                ),
                              ),
                            ),
                          ),
                        ),
                        Container(
                          padding: const EdgeInsets.all(1.5),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(100),
                            gradient: LinearGradient(
                              colors: [const Color.fromRGBO(87, 44, 220, 1), ThemeApp.color.light],
                              begin: Alignment.centerLeft,
                              end: Alignment.centerRight,
                            ),
                          ),
                          child: Container(
                            padding: const EdgeInsets.all(6),
                            decoration: BoxDecoration(
                              color: ThemeApp.color.dark,
                              borderRadius: BorderRadius.circular(100),
                            ),
                            child: SizedBox(
                              width: 49,
                              height: 49,
                              child: BlocBuilder<BlocMain, StateMain>(
                                bloc: blocMain,
                                builder: (context, state) {
                                  final currentState = state as MainLoaded;
                                  return ClipRRect(
                                    borderRadius: BorderRadius.circular(100),
                                    child: Image.network(
                                      currentState.auth?.avatar ?? '',
                                      errorBuilder: (context, error, stackTrace) {
                                        return const Icon(Icons.account_circle, size: 50, color: Colors.grey);
                                      },
                                    ),
                                  );
                                },
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
              SliverPadding(
                padding: const EdgeInsets.only(left: 10, right: 10, bottom: 15),
                sliver: SliverPersistentHeader(
                  pinned: true,
                  delegate: HeaderSticky(
                    height: 230,
                    child: ColoredBox(
                      color: ThemeApp.color.dark,
                      child: Container(
                        width: MediaQuery.of(context).size.width,
                        margin: const EdgeInsets.symmetric(vertical: 10),
                        decoration: BoxDecoration(
                          color: ThemeApp.color.secondary,
                          borderRadius: BorderRadius.circular(10),
                        ),
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(10),
                          child: BlocBuilder<BlocMain, StateMain>(
                            bloc: blocMain,
                            builder: (context, state) {
                              final currentState = state as MainLoaded;
                              if (currentState.myCourse?.thumbnail == null || currentState.myCourse?.thumbnail == '') {
                                return Container(
                                  decoration: const BoxDecoration(),
                                  child: Center(
                                    child: Text(
                                      "Memuat data...",
                                      style: ThemeApp.font.semiBold.copyWith(color: ThemeApp.color.light),
                                    ),
                                  ),
                                );
                              }
                              return player;
                            },
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              BlocBuilder<BlocMain, StateMain>(
                bloc: blocMain,
                builder: (context, state) {
                  final currentState = state as MainLoaded;
                  if ((currentState.myLessons ?? []).isEmpty) {
                    return const Shimmer();
                  }
                  return SliverPadding(
                    padding: const EdgeInsets.symmetric(horizontal: 10),
                    sliver: SliverList.builder(
                      itemCount: (currentState.myLessons ?? []).length,
                      itemBuilder: (context, index) {
                        return GestureDetector(
                          onTap: () {
                            blocMain.loadVideo(
                              blocMain.videoSources = (currentState.myLessons ?? [])[index].source?.sourceYoutube ?? '',
                              isLoading: true,
                            );
                          },
                          child: Container(
                            margin: const EdgeInsets.only(bottom: 8),
                            padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 20),
                            decoration: BoxDecoration(
                              color: ThemeApp.color.white.withOpacity(0.1),
                              border: Border.all(width: 1, color: ThemeApp.color.white.withOpacity(0.5)),
                              borderRadius: BorderRadius.circular(25),
                            ),
                            child: Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              crossAxisAlignment: CrossAxisAlignment.center,
                              children: [
                                Expanded(
                                  child: Text(
                                    (currentState.myLessons ?? [])[index].title ?? '',
                                    maxLines: 1,
                                    overflow: TextOverflow.ellipsis,
                                    style: ThemeApp.font.semiBold.copyWith(fontSize: 14, color: ThemeApp.color.white),
                                  ),
                                ),
                                Text(
                                  (currentState.myLessons ?? [])[index].source?.playtime ?? '',
                                  style: ThemeApp.font.semiBold.copyWith(fontSize: 14, color: ThemeApp.color.white),
                                ),
                              ],
                            ),
                          ),
                        );
                      },
                    ),
                  );
                },
              ),
              SliverPadding(
                padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                sliver: SliverToBoxAdapter(
                  child: SizedBox(
                    height: 480,
                    child: Column(
                      children: [
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          crossAxisAlignment: CrossAxisAlignment.center,
                          children: [
                            Text(
                              "Your Classes",
                              style: ThemeApp.font.bold.copyWith(fontSize: 14, color: ThemeApp.color.white),
                            ),
                            Text(
                              "See all",
                              style: ThemeApp.font.regular.copyWith(fontSize: 12, color: ThemeApp.color.white),
                            ),
                          ],
                        ),
                        const SizedBox(
                          height: 20,
                        ),
                        SingleChildScrollView(
                          scrollDirection: Axis.horizontal,
                          child: BlocBuilder<BlocMain, StateMain>(
                            bloc: blocMain,
                            builder: (context, state) {
                              final currentState = state as MainLoaded;
                              if ((currentState.myCourses ?? []).isEmpty) {
                                return const ShimmerF2();
                              }
                              return Row(
                                children: (currentState.myCourses ?? []).asMap().entries.map((item) {
                                  return Container(
                                    margin: EdgeInsets.only(left: item.key == 0 ? 0 : 15),
                                    width: 250,
                                    padding: const EdgeInsets.all(10),
                                    decoration: BoxDecoration(
                                      color: ThemeApp.color.white,
                                      borderRadius: BorderRadius.circular(12),
                                    ),
                                    child: Column(
                                      children: [
                                        SizedBox(
                                          height: 140,
                                          child: ClipRRect(
                                            borderRadius: BorderRadius.circular(12),
                                            child: Image.network(
                                              item.value.thumbnail ?? "",
                                              errorBuilder: (context, error, stackTrace) {
                                                return const Icon(Icons.image, size: 50, color: Colors.grey);
                                              },
                                            ),
                                          ),
                                        ),
                                        const SizedBox(
                                          height: 10,
                                        ),
                                        Text(
                                          item.value.title ?? "",
                                          maxLines: 2,
                                          overflow: TextOverflow.ellipsis,
                                          style: ThemeApp.font.bold.copyWith(
                                            fontSize: 24,
                                            height: 1.2,
                                            color: ThemeApp.color.dark,
                                          ),
                                        ),
                                        const SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                          children: [
                                            Expanded(
                                              child: RichText(
                                                maxLines: 1,
                                                overflow: TextOverflow.ellipsis,
                                                text: TextSpan(
                                                  style: ThemeApp.font.regular.copyWith(
                                                    color: ThemeApp.color.dark.withOpacity(0.5),
                                                  ),
                                                  children: [
                                                    const TextSpan(text: 'by '),
                                                    TextSpan(
                                                        text: item.value.authorName ?? "",
                                                        style: ThemeApp.font.semiBold),
                                                  ],
                                                ),
                                              ),
                                            ),
                                            Row(
                                              children: [
                                                SvgPicture.asset(Asset.icUser),
                                                const SizedBox(
                                                  width: 3,
                                                ),
                                                Text(
                                                  (item.value.enrolledCount ?? 0).toString(),
                                                  style: ThemeApp.font.semiBold.copyWith(
                                                    fontSize: 12,
                                                    color: ThemeApp.color.dark.withOpacity(0.5),
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ],
                                        ),
                                        const SizedBox(
                                          height: 10,
                                        ),
                                        Row(
                                          children: [
                                            Expanded(
                                              child: Button(
                                                onPress: () =>
                                                    blocMain.onGetDetailMyClass(courseId: item.value.id.toString()),
                                                child: Text(
                                                  "Start Learning",
                                                  textAlign: TextAlign.center,
                                                  style: ThemeApp.font.medium.copyWith(color: ThemeApp.color.white),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      ],
                                    ),
                                  );
                                }).toList(),
                              );
                            },
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
